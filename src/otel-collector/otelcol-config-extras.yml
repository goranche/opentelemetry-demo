# Copyright The OpenTelemetry Authors
# SPDX-License-Identifier: Apache-2.0

# extra settings to be merged into OpenTelemetry Collector configuration
# do not delete this file

## Example configuration for sending data to your own OTLP HTTP backend
## Note: the spanmetrics exporter must be included in the exporters array
## if overriding the traces pipeline.
##
#  exporters:
#    otlphttp/example:
#      endpoint: <your-endpoint-url>
#
#  service:
#    pipelines:
#      traces:
#        exporters: [spanmetrics, otlphttp/example]



exporters:
  otlp/signoz:
    endpoint: host.docker.internal:${env:OTEL_COLLECTOR_PORT_GRPC}
    tls:
      insecure: true
  otlphttp/signoz:
    endpoint: host.docker.internal:${env:OTEL_COLLECTOR_PORT_HTTP}
    tls:
      insecure: true

service:
  pipelines:
    traces:
      # exporters: [otlp, debug, spanmetrics, otlp/signoz]
      exporters: [otlp/signoz, debug, spanmetrics]
    metrics:
      exporters: [otlp/signoz, debug]
    logs:
      exporters: [otlp/signoz, debug]




# exporters:
#   otlp/signoz:
#     endpoint: http://host.docker.internal:4317
#     tls:
#       insecure: true
#
# service:
#   pipelines:
#     traces:
#       exporters: [otlp, debug, spanmetrics, otlp/signoz]
#     metrics:
#       exporters: [otlphttp/prometheus, debug, otlp/signoz]
#     logs:
#       exporters: [opensearch, debug, otlp/signoz]
